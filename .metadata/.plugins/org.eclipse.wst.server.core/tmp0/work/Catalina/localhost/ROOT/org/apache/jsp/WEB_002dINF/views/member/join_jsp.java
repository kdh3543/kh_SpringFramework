/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.73
 * Generated at: 2021-12-29 07:12:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/SpringWorkspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Spring_04_Board/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1640309576944L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>join</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<form action=\"/member/signupProc\" method=post id=frm>\r\n");
      out.write("		<table border=\"1\" align=center>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th colspan=2 align=center>회원 가입 정보\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td class=title>아이디 :\r\n");
      out.write("				<td><input type=text id=id name=id><span id=checkResult></span>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td class=title>비밀번호 :\r\n");
      out.write("				<td><input type=password id=pwd name=pw>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td class=title>비밀번호 확인 :\r\n");
      out.write("				<td><input type=password id=repwd> <span id=result></span>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td class=title>이름 :\r\n");
      out.write("				<td><input type=text id=name name=name>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td class=title>전화번호 :\r\n");
      out.write("				<td><select id=p1 name=select>\r\n");
      out.write("						<option>010\r\n");
      out.write("						<option>016\r\n");
      out.write("						<option>017\r\n");
      out.write("						<option>080\r\n");
      out.write("						<option>031\r\n");
      out.write("						<option>02\r\n");
      out.write("						<option>051\r\n");
      out.write("						<option>052\r\n");
      out.write("				</select> - <input type=text id=p2> - <input type=text id=p3>\r\n");
      out.write("					<input type=hidden name=phone id=phone></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td class=title>이메일 :\r\n");
      out.write("				<td><input type=text id=email name=email>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td class=title>우편번호 :\r\n");
      out.write("				<td><input type=text id=postcode name=zipcode><input\r\n");
      out.write("					type=button value=찾기 id=search>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td class=title>주소1 :\r\n");
      out.write("				<td><input type=text id=adrs1 name=address1>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td class=title>주소2 :\r\n");
      out.write("				<td><input type=text id=adrs2 name=address2>\r\n");
      out.write("			</tr>\r\n");
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=2 align=center>\r\n");
      out.write("					<button type=submit>회원가입</button>\r\n");
      out.write("					<button type=\"reset\">다시 입력</button> <a href=\"/\"><button\r\n");
      out.write("							type=button>뒤로가기</button></a>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("	</form>\r\n");
      out.write("	<script>\r\n");
      out.write("        let frm = $(\"#frm\");\r\n");
      out.write("        let id = $(\"#id\");\r\n");
      out.write("        let pwd = $(\"#pwd\");\r\n");
      out.write("		let repwd = $(\"#repwd\");\r\n");
      out.write("		let result = $(\"#result\");\r\n");
      out.write("		let name = $(\"#name\");\r\n");
      out.write("		let num1 = $(\"#num1\");\r\n");
      out.write("		let num2 = $(\"#num2\");\r\n");
      out.write("		let email = $(\"#email\");\r\n");
      out.write("		\r\n");
      out.write("		repwd.on(\"keyup\",function(){\r\n");
      out.write("			if(pwd.val()!=repwd.val()){\r\n");
      out.write("				result.html(\"비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("				result.css(\"color\",\"red\");\r\n");
      out.write("			}else{\r\n");
      out.write("				result.html(\"비밀번호가 일치합니다.\");\r\n");
      out.write("				result.css(\"color\",\"blue\");\r\n");
      out.write("			}\r\n");
      out.write("		})\r\n");
      out.write("		\r\n");
      out.write("		pwd.on(\"keyup\",function(){\r\n");
      out.write("			if(pwd.val()!=repwd.val()){\r\n");
      out.write("				result.html(\"비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("				result.css(\"color\",\"red\");\r\n");
      out.write("			}else{\r\n");
      out.write("				result.html(\"비밀번호가 일치합니다.\");\r\n");
      out.write("				result.css(\"color\",\"blue\");\r\n");
      out.write("			}\r\n");
      out.write("		})\r\n");
      out.write("		\r\n");
      out.write("        $(function () {\r\n");
      out.write("            $(\"#id\").on(\"blur\", function () {\r\n");
      out.write("              $.ajax({\r\n");
      out.write("                url: \"/member/idDuplCheck\",\r\n");
      out.write("                data: { id: $(\"#id\").val() }\r\n");
      out.write("              }).done(function (resp) {\r\n");
      out.write("                if (resp == \"1\") {\r\n");
      out.write("                  $(\"#checkResult\").css(\"color\", \"pink\");\r\n");
      out.write("                  $(\"#checkResult\").text($(\"#id\").val() + \"이미 사용중인 ID 입니다.\");\r\n");
      out.write("                  $(\"#id\").val(\"\");\r\n");
      out.write("                  $(\"#id\").focus();\r\n");
      out.write("                } else {\r\n");
      out.write("                  $(\"#checkResult\").css(\"color\", \"dodgerblue\");\r\n");
      out.write("                  $(\"#checkResult\").text(\"사용 가능한 ID 입니다.\");\r\n");
      out.write("                }\r\n");
      out.write("              });\r\n");
      out.write("            });\r\n");
      out.write("        })\r\n");
      out.write("\r\n");
      out.write("        frm.on(\"submit\", function () {\r\n");
      out.write("        	let p1 = $(\"#p1\").val();\r\n");
      out.write("        	let p2 = $(\"#p2\").val();\r\n");
      out.write("        	let p3 = $(\"#p3\").val();\r\n");
      out.write("        	$(\"#phone\").val(p1+p2+p3);\r\n");
      out.write("          let idRegex = /[a-z][a-z0-9]{3,10}/g;\r\n");
      out.write("          let idResult = idRegex.test(id.val());\r\n");
      out.write("          if (!idResult) {\r\n");
      out.write("            alert(\"아이디를 제대로 입력해주세요.\\n아이디는 4자리 이상 11자리 이하로 입력하셔야 하며\\n첫자리는 숫자 입력을 하시거나 공백이 올 수 없습니다.\");\r\n");
      out.write("\r\n");
      out.write("            id.val(\"\");\r\n");
      out.write("            id.focus();\r\n");
      out.write("            return false;\r\n");
      out.write("          }\r\n");
      out.write("\r\n");
      out.write("          let pwRegex = /[a-z0-9]{4}/;\r\n");
      out.write("          let pwResult = pwRegex.test(pwd.val());\r\n");
      out.write("          if (!pwResult) {\r\n");
      out.write("            alert(\"패스워드는 4자리 이상 입력해주세요.\");\r\n");
      out.write("            pwd.val(\"\");\r\n");
      out.write("            repwd.val(\"\");\r\n");
      out.write("            pwd.focus();\r\n");
      out.write("            return false;\r\n");
      out.write("          }\r\n");
      out.write("\r\n");
      out.write("          let nameRegex = /[가-힣a-z]{2,5}/g;\r\n");
      out.write("          let nameResult = nameRegex.test(name.val());\r\n");
      out.write("          if (!nameResult) {\r\n");
      out.write("            alert(\"이름을 제대로 입력해주세요.\");\r\n");
      out.write("            name.val(\"\");\r\n");
      out.write("            name.focus();\r\n");
      out.write("            return false;\r\n");
      out.write("          }\r\n");
      out.write("        })\r\n");
      out.write("        \r\n");
      out.write("        document.getElementById(\"search\").onclick = function(){\r\n");
      out.write("            new daum.Postcode({\r\n");
      out.write("                oncomplete: function(data){\r\n");
      out.write("                    document.getElementById('postcode').value = data.zonecode;\r\n");
      out.write("                    document.getElementById(\"adrs1\").value = data.roadAddress;\r\n");
      out.write("                    document.getElementById(\"adrs2\").value = data.jibunAddress;\r\n");
      out.write("                }\r\n");
      out.write("            }).open();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("      </script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
